mkdir /?/; cd /?/;

npm init -y;
npm i express typeorm reflect-metadata mysql2 dotenv bcrypt cors jsonwebtoken class-validator class-transformer zod;
npm i -D typescript ts-node-dev @types/express @types/node @types/bcrypt @types/cors @types/jsonwebtoken;
mkdir src src/config src/controllers src/models src/routes src/middlewares src/entities src/services;
touch ./src/server.ts .env;
echo '{
  "compilerOptions": {
    "target": "ES6",
    "module": "commonjs",
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "esModuleInterop": true,
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "strictPropertyInitialization": false
  },
  "include": ["src"],
  "exclude": ["node_modules"]
}' > tsconfig.json

/*
'package.json'
    /...
  "scripts": {
    "build": "tsc",
    "start": "tsc && node dist/index.js",
    "dev": "npx ts-node-dev src/server.ts"
  },
    .../
*/

//npx tsc --init;

//
Exemplo	                        Função
app.get(...)	                  Define rotas GET
app.post(...)	                  Define rotas POST
app.use(...)	                  Aplica middlewares
app.listen(...)	                Inicia o servidor
app.use('/api', router)	        Encaixar rotas externas
app.set(...) / app.get(...)	    Configurações internas
//